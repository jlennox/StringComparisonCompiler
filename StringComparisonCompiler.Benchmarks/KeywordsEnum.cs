using System.ComponentModel;

namespace StringComparisonCompiler.Benchmarks
{
    public enum KeywordsEnum
    {
        NotFound,
        [Description("abstract")]
        Abstract,
        [Description("as")]
        As,
        [Description("base")]
        Base,
        [Description("bool")]
        Bool,
        [Description("break")]
        Break,
        [Description("byte")]
        Byte,
        [Description("case")]
        Case,
        [Description("catch")]
        Catch,
        [Description("char")]
        Char,
        [Description("checked")]
        Checked,
        [Description("class")]
        Class,
        [Description("const")]
        Const,
        [Description("continue")]
        Continue,
        [Description("decimal")]
        Decimal,
        [Description("default")]
        Default,
        [Description("delegate")]
        Delegate,
        [Description("do")]
        Do,
        [Description("double")]
        Double,
        [Description("else")]
        Else,
        [Description("enum")]
        Enum,
        [Description("event")]
        Event,
        [Description("explicit")]
        Explicit,
        [Description("extern")]
        Extern,
        [Description("false")]
        False,
        [Description("finally")]
        Finally,
        [Description("fixed")]
        Fixed,
        [Description("float")]
        Float,
        [Description("for")]
        For,
        [Description("foreach")]
        Foreach,
        [Description("goto")]
        Goto,
        [Description("if")]
        If,
        [Description("implicit")]
        Implicit,
        [Description("in")]
        In,
        [Description("int")]
        Int,
        [Description("interface")]
        Interface,
        [Description("internal")]
        Internal,
        [Description("is")]
        Is,
        [Description("lock")]
        Lock,
        [Description("long")]
        Long,
        [Description("namespace")]
        Namespace,
        [Description("new")]
        New,
        [Description("null")]
        Null,
        [Description("object")]
        Object,
        [Description("operator")]
        Operator,
        [Description("out")]
        Out,
        [Description("override")]
        Override,
        [Description("params")]
        Params,
        [Description("private")]
        Private,
        [Description("protected")]
        Protected,
        [Description("public")]
        Public,
        [Description("readonly")]
        Readonly,
        [Description("ref")]
        Ref,
        [Description("return")]
        Return,
        [Description("sbyte")]
        Sbyte,
        [Description("sealed")]
        Sealed,
        [Description("short")]
        Short,
        [Description("sizeof")]
        Sizeof,
        [Description("stackalloc")]
        Stackalloc,
        [Description("static")]
        Static,
        [Description("string")]
        String,
        [Description("struct")]
        Struct,
        [Description("switch")]
        Switch,
        [Description("this")]
        This,
        [Description("throw")]
        Throw,
        [Description("true")]
        True,
        [Description("try")]
        Try,
        [Description("typeof")]
        Typeof,
        [Description("uint")]
        Uint,
        [Description("ulong")]
        Ulong,
        [Description("unchecked")]
        Unchecked,
        [Description("unsafe")]
        Unsafe,
        [Description("ushort")]
        Ushort,
        [Description("using")]
        Using,
        [Description("virtual")]
        Virtual,
        [Description("void")]
        Void,
        [Description("volatile")]
        Volatile,
        [Description("while")]
        While,
    }
}